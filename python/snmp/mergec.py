import os
import sys
import glob
def merge(fdir,outfile):
	file_list = glob.glob(fdir+'*.c')
	file_to_write = file(outfile,'w')
	file_to_write.write('''/*
*@filename
*@bief
*2015-05-29
*change list:
*-----------
*2015-05-27,iks  create it
*2015-05-29,iks  add maniboard system
*2015-05-30,iks  add sysEthnet sysTime
*2015-06-03,iks  auto-generated the file used mib2c files 
*2015-06-08,iks  add the snmp_adapter_server 
*
*Note:this file is auto-generated by mergec.py!
*/
#include <net-snmp/net-snmp-config.h>
#include <net-snmp/net-snmp-includes.h>
#include <net-snmp/agent/net-snmp-agent-includes.h>
//add some include files

/* the progress date strct */
typedef struct SnmpIVP_s{
SnmpAdapter *sa;
}SnmpIVP;

SnmpIVP snmpIvp;

void 
init_snmpIVPMB(void)
{
    SnmpIVP *SI_p = &snmpIvp;
    SnmpAdapterInitParam initParam;

''')
    
	for f in file_list:
		file_to_read = file(str(f),'r')
		list_line = file_to_read.readlines()
		for ln in [14,15]:
			file_to_write.write(list_line[ln])
		file_to_read.close()
	file_to_write.write('\n');
	for f in file_list:
		file_to_read = file(str(f),'r')
		list_line = file_to_read.readlines()
		for ln in [19,20,21]:
			file_to_write.write(list_line[ln])
		file_to_read.close()
	file_to_write.write("""
    memset(SI_p,0,sizeof(SnmpIVP));
    sprintf(initParam.clientPath,SNMP_CLIENT_UX_PATH);
    sprintf(initParam.serverPath,SNMP_SERVER_UX_PATH);
    SA_Init(&initParam,&SI_p->sa);
}

#define SA_GET(commandid) \\
{ \\
    SnmpIVP *SI_p = &snmpIvp; \\
    char *returnString = NULL; \\
    unsigned short returnStrLen = 0; \\
    SA_ProcessCommand_j((SnmpAdapter*)(SI_p->a),commandid,NULL,&returnString,&returnStrLen); \\
    snmp_set_var_typed_value(requests->requestvb,ASN_OCTET_STR,(unsigned char*)returnString,returnStrLen); \\
    if(returnString) \\
    { \\
        free(returnString); \\
    }\\
}

#define SA_SET(commandid) \\
{ \\
    SnmpIVP *SI_p = &snmpIvp; \\
    char *returnString = NULL; \\
    unsigned short returnStrLen = 0; \\
    int ret = SA_ProcessCommand_j((SnmpAdapter*)(SI_p->sa),commandid,requests->requestvb->val.string,&returnString,&returnLen); \\
    if(returnString) \\
    { \\
        free(returnString); \\
    } \\
    if(ret) \\
    { \\
        netsnmp_set_request_error(reqinfo,requests,SNMP_ERR_GENERR); \\
    } \\
}
""");
	for f in file_list:
		file_to_read = file(str(f),'r')
		list_line = file_to_read.readlines()
		for ln in range(24,len(list_line)):
			file_to_write.write(list_line[ln])
		file_to_read.close()
	file_to_write.close()

if __name__ == '__main__':
	merge('../snmp/source_0603/','snmpIVPMB.c')
